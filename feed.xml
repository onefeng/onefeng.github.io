<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://onefeng.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://onefeng.github.io/" rel="alternate" type="text/html" /><updated>2022-04-07T18:00:21+08:00</updated><id>https://onefeng.github.io/feed.xml</id><title type="html">晚风</title><subtitle>晚风的个人博客</subtitle><author><name>onefeng</name></author><entry><title type="html">解决/var/lib/docker/overlay2占用过大</title><link href="https://onefeng.github.io/2022/03/23/docker/" rel="alternate" type="text/html" title="解决/var/lib/docker/overlay2占用过大" /><published>2022-03-23T00:00:00+08:00</published><updated>2022-03-23T00:00:00+08:00</updated><id>https://onefeng.github.io/2022/03/23/docker</id><content type="html" xml:base="https://onefeng.github.io/2022/03/23/docker/">&lt;p&gt;解决/var/lib/docker/overlay2占用过大&lt;/p&gt;

&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;今天在公司的时候终于解决了一直困扰我很久的一个问题。&lt;/p&gt;

&lt;p&gt;问题的背景是我在一台机器上用docker依次部署了canal-server,canal-adapter作为公司同步数据的节点。但是随着时间的推移容器占用的磁盘越来越大了，到现在不得不解决了，直接磁盘满了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/docker/磁盘.png&quot; alt=&quot;图片1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;解决方案&quot;&gt;解决方案&lt;/h2&gt;
&lt;p&gt;列举出现这种情况所有可能的原因，然后逐一排除。首先是在/var/docker目录下，因此所有的原因应该与docker增加的文件和日志有关。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;未使用的容器/镜像&lt;br /&gt;
用分别检查占用空间总共占用不大2G,另外这台机器专门用来做数据同步。其他任何程序和文件都没有安装。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;日志文件
由于之前是将canal-server,canal-adapter的日志配置设置为3个文件50M进行日志回滚，因此对日志输出忽略了，但是这是canal服务本生记录并打印的日志。&lt;br /&gt;
实际上我在启动容器的时候docker的日志驱动默认为json-file,日志记录在/var/lib/docker/containers/{containerId}下
&lt;img src=&quot;/images/posts/docker/日志.png&quot; alt=&quot;图片2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;可以看到日志直接有20G~ 删除日志并重启容器后磁盘暂用恢复正常。&lt;/p&gt;

&lt;h2 id=&quot;总结扩展&quot;&gt;总结&amp;amp;扩展&lt;/h2&gt;

&lt;p&gt;通过这次处理的问题，可以得出docker默认的的日志驱动会捕获所有日志，如果希望对日志进行回滚需要在启动时设置参数&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# max-size 最大数值&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# max-file 最大日志数&lt;/span&gt;
docker docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--log-opt&lt;/span&gt; max-size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10m &lt;span class=&quot;nt&quot;&gt;--log-opt&lt;/span&gt; max-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3 redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是如果不想每次创建容器都加日志参数命令那么修改 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/docker/daemon.json&lt;/code&gt;,并增加&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;log-driver&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;json-file&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;log-opts&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;max-size&quot;&lt;/span&gt; :&lt;span class=&quot;s2&quot;&gt;&quot;10m&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;max-file&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;3&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重启docker后生效,已存在的容器则要新建&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>onefeng</name></author><category term="docker" /><summary type="html">解决/var/lib/docker/overlay2占用过大</summary></entry><entry><title type="html">安装ubuntu</title><link href="https://onefeng.github.io/2021/09/29/linux1/" rel="alternate" type="text/html" title="安装ubuntu" /><published>2021-09-29T00:00:00+08:00</published><updated>2021-09-29T00:00:00+08:00</updated><id>https://onefeng.github.io/2021/09/29/linux1</id><content type="html" xml:base="https://onefeng.github.io/2021/09/29/linux1/">&lt;p&gt;本文讲述安装制作ubuntu启动盘以及在机器上安装系统的过程&lt;/p&gt;

&lt;h3 id=&quot;下载文件&quot;&gt;下载文件&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;rufus-3.13.exe&lt;/li&gt;
  &lt;li&gt;ubuntu-18.04.6-desktop-amd64.iso&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;安装过程&quot;&gt;安装过程&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;制作ubuntu镜像启动盘，制作过程在windows下完成。如下图所示，选择对应的u盘和镜像文件，点击”开始“。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/posts/linux/img_1.png&quot; alt=&quot;图片1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;插入u盘在开机时按F2进入bios选项（这里需要根据自己的计算机进入），在”boot“选项中调整第一启动项为”[UEFI:hp …]“,就是我u盘的名称。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/posts/linux/img_2.jpg&quot; alt=&quot;图片2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择 ”install ubuntu“，根据界面的安装选择下一步，在分区的时候选择”手动分区”，这里我的硬盘为128G固态+1T机械，分区方案如下。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;硬盘类型&lt;/th&gt;
      &lt;th&gt;分区类型&lt;/th&gt;
      &lt;th&gt;分区格式&lt;/th&gt;
      &lt;th&gt;挂载点&lt;/th&gt;
      &lt;th&gt;大小&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;固态&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/boot&lt;/td&gt;
      &lt;td&gt;500M&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;固态&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;efi&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;500M&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;固态&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;swap&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;8G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;固态&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/&lt;/td&gt;
      &lt;td&gt;116G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机械&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/home&lt;/td&gt;
      &lt;td&gt;400G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机械&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/usr&lt;/td&gt;
      &lt;td&gt;200G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机械&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/var&lt;/td&gt;
      &lt;td&gt;100G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机械&lt;/td&gt;
      &lt;td&gt;主分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/opt&lt;/td&gt;
      &lt;td&gt;100G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机械&lt;/td&gt;
      &lt;td&gt;逻辑分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/srv&lt;/td&gt;
      &lt;td&gt;50G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机械&lt;/td&gt;
      &lt;td&gt;逻辑分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/usr/local&lt;/td&gt;
      &lt;td&gt;50G&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机械&lt;/td&gt;
      &lt;td&gt;逻辑分区&lt;/td&gt;
      &lt;td&gt;ext4&lt;/td&gt;
      &lt;td&gt;/tmp&lt;/td&gt;
      &lt;td&gt;50G&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>onefeng</name></author><category term="linux" /><category term="运维" /><summary type="html">本文讲述安装制作ubuntu启动盘以及在机器上安装系统的过程</summary></entry><entry><title type="html">ubuntu命令行连接wifi</title><link href="https://onefeng.github.io/2021/09/26/linux-job/" rel="alternate" type="text/html" title="ubuntu命令行连接wifi" /><published>2021-09-26T00:00:00+08:00</published><updated>2021-09-26T00:00:00+08:00</updated><id>https://onefeng.github.io/2021/09/26/linux-job</id><content type="html" xml:base="https://onefeng.github.io/2021/09/26/linux-job/">&lt;p&gt;本文讲述在ubuntu环境下用命令行连接wifi的过程&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;查看网络设备列表
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmcli dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;开启wifi
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmcli r wifi on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;扫描wifi
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmcli dev wifi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;连接指定wifi
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmcli dev wifi connect &lt;span class=&quot;s2&quot;&gt;&quot;SSID&quot;&lt;/span&gt; password &lt;span class=&quot;s2&quot;&gt;&quot;PASSWORD&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;SSID为wifi的名称，PASSWORD为wifi密码&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>onefeng</name></author><category term="linux" /><category term="运维" /><summary type="html">本文讲述在ubuntu环境下用命令行连接wifi的过程</summary></entry><entry><title type="html">github pages创建博客</title><link href="https://onefeng.github.io/2021/07/10/jekyll/" rel="alternate" type="text/html" title="github pages创建博客" /><published>2021-07-10T00:00:00+08:00</published><updated>2021-07-10T00:00:00+08:00</updated><id>https://onefeng.github.io/2021/07/10/jekyll</id><content type="html" xml:base="https://onefeng.github.io/2021/07/10/jekyll/">&lt;p&gt;关于使用github pages创建博客的教学&lt;/p&gt;

&lt;h2 id=&quot;操作说明&quot;&gt;操作说明&lt;/h2&gt;

&lt;h3 id=&quot;前提&quot;&gt;前提&lt;/h3&gt;

&lt;p&gt;首先在&lt;a href=&quot;https://github.com&quot;&gt;github&lt;/a&gt;官网上注册账号&lt;/p&gt;

&lt;h3 id=&quot;启动博客页面&quot;&gt;启动博客页面&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;在https://github.com/onefeng/onefeng.github.io fork项目，应该就可以在你自己的仓库下看到。&lt;/li&gt;
  &lt;li&gt;点击进入已经fork的项目点击Settings-&amp;gt;General修改项目名称为你自己的命名。只需要将xxxxx替换。
&lt;img src=&quot;/images/blog/img.png&quot; alt=&quot;图片1&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;项目中点击Settings-&amp;gt;Pages选择页面启动运行的分支为master
&lt;img src=&quot;/images/blog/img_1.png&quot; alt=&quot;图片2&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;生成key,在全局设置中选 Settings-&amp;gt;Developer settings-&amp;gt;Person access tokens-&amp;gt;Generate new token 勾选 public_repo,在该页面最后，点击Generate token，复制已经生成的key
&lt;img src=&quot;/images/blog/img_2.png&quot; alt=&quot;图片3&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;进入博客项目中，选择Settings-&amp;gt;Secret-&amp;gt;Actions-&amp;gt;New repository secret,将上一步生成的key复制到value，最后点击Add secret
&lt;img src=&quot;/images/blog/img_3.png&quot; alt=&quot;图片4&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;添加gitalk.在全局设置中Settings-&amp;gt;Developer settings-&amp;gt;OAuth Apps.按格式填写后Register application.然后记下生成的Client ID和Client secrets
&lt;img src=&quot;/images/blog/img_4.png&quot; alt=&quot;图片4&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;修改_config.yml配置，基本的都配置好了主要是改一下项目基本配置和gitalk配置，另外删除_post下除template.md的文件和_wiki,_images下的所有文件 &lt;br /&gt;
修改完成并推送或合并到master上就可以看到了。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;写文章&quot;&gt;写文章&lt;/h3&gt;

&lt;p&gt;以上主要是启动页面的步骤，但是最重要的还是文章的内容。写文章在_posts目录下写就可以了，可以按照template.md的格式写，其他的就没有什么要说的了。&lt;/p&gt;

&lt;h2 id=&quot;本地调试&quot;&gt;本地调试&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;安装ruby&lt;/li&gt;
  &lt;li&gt;安装 gem install bundler&lt;/li&gt;
  &lt;li&gt;安装 gem install jekyll&lt;/li&gt;
  &lt;li&gt;切换到项目目录下 bundle install&lt;/li&gt;
  &lt;li&gt;bundle exec jekyll serve&lt;/li&gt;
&lt;/ol&gt;</content><author><name>onefeng</name></author><category term="技术" /><summary type="html">关于使用github pages创建博客的教学</summary></entry></feed>